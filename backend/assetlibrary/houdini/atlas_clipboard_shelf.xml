<?xml version="1.0" encoding="UTF-8"?>
<!-- Atlas Clipboard Shelf Buttons -->
<!-- Add these to your existing atlas.shelf file -->

<shelf name="atlas_clipboard" label="Atlas Clipboard">
  <memberTool name="atlas_copy"/>
  <memberTool name="atlas_paste"/>
  <memberTool name="atlas_inspect"/>
</shelf>

<tool name="atlas_copy" label="Atlas Copy" icon="$HH/pic/SOP_copytopoints.svg">
  <helpText>
    Copy selected nodes to Atlas library and generate copy string.
    
    This tool exports selected nodes to the Atlas library and creates
    a copy string that can be shared and pasted anywhere.
    
    Usage:
    1. Select nodes to copy
    2. Click Atlas Copy
    3. Enter asset name and select subcategory
    4. Copy string is placed in clipboard
    5. Share copy string or use Atlas Paste to import
    
    Features:
    - Exports all textures and geometry files
    - Optional AES encryption for security
    - Automatic path remapping on paste
    - Compatible with existing Atlas library structure
  </helpText>
  
  <script scriptType="python">
<![CDATA[
# Atlas Copy Shelf Button
import sys
import os

# Add path for Atlas modules
atlas_path = os.path.join(hou.getenv("HIP"), "..", "backend", "assetlibrary", "_3D")
if atlas_path not in sys.path:
    sys.path.append(atlas_path)

try:
    from shelf_atlas_copy import atlas_copy_nodes
    atlas_copy_nodes()
except ImportError as e:
    hou.ui.displayMessage(
        f"Failed to import Atlas Copy module!\n\n"
        f"Error: {str(e)}\n\n"
        f"Make sure the Atlas system is properly installed.",
        severity=hou.severityType.Error,
        title="Atlas Copy - Import Error"
    )
except Exception as e:
    hou.ui.displayMessage(
        f"Atlas Copy failed!\n\n"
        f"Error: {str(e)}",
        severity=hou.severityType.Error,
        title="Atlas Copy - Error"
    )
]]>
  </script>
</tool>

<tool name="atlas_paste" label="Atlas Paste" icon="$HH/pic/SOP_paste.svg">
  <helpText>
    Paste Atlas asset from clipboard copy string.
    
    This tool reads an Atlas copy string from the clipboard and imports
    the asset with automatic texture and geometry path remapping.
    
    Usage:
    1. Copy Atlas copy string to clipboard
    2. Navigate to desired network location
    3. Click Atlas Paste
    4. Confirm asset import
    5. Nodes are imported with proper file paths
    
    Features:
    - Automatic asset library lookup
    - Texture and geometry path remapping
    - Encryption support with key validation
    - Context-aware pasting (SOP/OBJ/etc.)
    - Cursor positioning of imported nodes
  </helpText>
  
  <script scriptType="python">
<![CDATA[
# Atlas Paste Shelf Button
import sys
import os

# Add path for Atlas modules
atlas_path = os.path.join(hou.getenv("HIP"), "..", "backend", "assetlibrary", "_3D")
if atlas_path not in sys.path:
    sys.path.append(atlas_path)

try:
    from shelf_atlas_paste import atlas_paste_nodes
    atlas_paste_nodes()
except ImportError as e:
    hou.ui.displayMessage(
        f"Failed to import Atlas Paste module!\n\n"
        f"Error: {str(e)}\n\n"
        f"Make sure the Atlas system is properly installed.",
        severity=hou.severityType.Error,
        title="Atlas Paste - Import Error"
    )
except Exception as e:
    hou.ui.displayMessage(
        f"Atlas Paste failed!\n\n"
        f"Error: {str(e)}",
        severity=hou.severityType.Error,
        title="Atlas Paste - Error"
    )
]]>
  </script>
</tool>

<tool name="atlas_inspect" label="Atlas Inspect" icon="$HH/pic/MISC_generic.svg">
  <helpText>
    Inspect Atlas copy string from clipboard without importing.
    
    This tool analyzes an Atlas copy string and shows detailed
    information about the asset without actually importing it.
    
    Usage:
    1. Copy Atlas copy string to clipboard
    2. Click Atlas Inspect
    3. View asset information and validation status
    
    Information shown:
    - Asset name and UID
    - Encryption status
    - Library location and availability
    - Copy string format validation
  </helpText>
  
  <script scriptType="python">
<![CDATA[
# Atlas Inspect Shelf Button
import sys
import os

# Add path for Atlas modules
atlas_path = os.path.join(hou.getenv("HIP"), "..", "backend", "assetlibrary", "_3D")
if atlas_path not in sys.path:
    sys.path.append(atlas_path)

try:
    from shelf_atlas_paste import atlas_paste_inspect
    atlas_paste_inspect()
except ImportError as e:
    hou.ui.displayMessage(
        f"Failed to import Atlas Inspect module!\n\n"
        f"Error: {str(e)}\n\n"
        f"Make sure the Atlas system is properly installed.",
        severity=hou.severityType.Error,
        title="Atlas Inspect - Import Error"
    )
except Exception as e:
    hou.ui.displayMessage(
        f"Atlas Inspect failed!\n\n"
        f"Error: {str(e)}",
        severity=hou.severityType.Error,
        title="Atlas Inspect - Error"
    )
]]>
  </script>
</tool>
